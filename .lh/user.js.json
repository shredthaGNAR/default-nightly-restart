{
    "sourceFile": "user.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1715915994761,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1715915994761,
            "name": "Commit-0",
            "content": "/****************************************************************************\n * SECTION: GENERAL                                                        *\n****************************************************************************/\n\n// PREF: initial paint delay\n// How long FF will wait before rendering the page (in ms)\n// [NOTE] Older PCs may want to use 250-750.\n// [NOTE] Dark Reader users may want to use 1000-2000 [3].\n// [1] https://bugzilla.mozilla.org/show_bug.cgi?id=1283302\n// [2] https://docs.google.com/document/d/1BvCoZzk2_rNZx3u9ESPoFjSADRI0zIPeJRXFLwWXx_4/edit#heading=h.28ki6m8dg30z\n// [3] https://old.reddit.com/r/firefox/comments/o0xl1q/reducing_cpu_usage_of_dark_reader_extension/\n// [4] https://reddit.com/r/browsers/s/wvNB7UVCpx\nuser_pref(\"nglayout.initialpaint.delay\", 1000); // DEFAULT; formerly 250\n    //user_pref(\"nglayout.initialpaint.delay_in_oopif\", 5); // DEFAULT\n\n// PREF: page reflow timer\n// Rather than wait until a page has completely downloaded to display it to the user,\n// web browsers will periodically render what has been received to that point.\n// Because reflowing the page every time additional data is received slows down\n// total page load time, a timer was added so that the page would not reflow too often.\n// This preference specfies whether that timer is active.\n// [1] https://kb.mozillazine.org/Content.notify.ontimer\n// true = do not reflow pages at an interval any higher than that specified by content.notify.interval (default)\n// false = reflow pages whenever new data is received\n//user_pref(\"content.notify.ontimer\", true); // DEFAULT\n\n// PREF: notification interval (in microseconds) to avoid layout thrashing\n// When Firefox is loading a page, it periodically reformats\n// or \"reflows\" the page as it loads. The page displays new elements\n// every 0.12 seconds by default. These redraws increase the total page load time.\n// The default value provides good incremental display of content\n// without causing an increase in page load time.\n// [NOTE] Lowering the interval will increase responsiveness\n// but also increase the total load time.\n// [WARNING] If this value is set below 1/10 of a second, it starts\n// to impact page load performance.\n// [EXAMPLE] 100000 = .10s = 100 reflows/second\n// [1] https://searchfox.org/mozilla-central/rev/c1180ea13e73eb985a49b15c0d90e977a1aa919c/modules/libpref/init/StaticPrefList.yaml#1824-1834\n// [2] https://dev.opera.com/articles/efficient-javascript/?page=3#reflow\n// [3] https://dev.opera.com/articles/efficient-javascript/?page=3#smoothspeed\nuser_pref(\"content.notify.interval\", 100000); // (.10s); default=120000 (.12s)\n\n// PREF: new tab preload\n// [WARNING] Disabling this may cause a delay when opening a new tab in Firefox.\n// [1] https://wiki.mozilla.org/Tiles/Technical_Documentation#Ping\n// [2] https://github.com/arkenfox/user.js/issues/1556\nuser_pref(\"browser.newtab.preload\", true); // DEFAULT\n\n// PREF: control how tabs are loaded when a session is restored\n// true=Tabs are not loaded until they are selected (default)\n// false=Tabs begin to load immediately.\nuser_pref(\"browser.sessionstore.restore_on_demand\", true); // DEFAULT\nuser_pref(\"browser.sessionstore.restore_pinned_tabs_on_demand\", true);\nuser_pref(\"browser.sessionstore.restore_tabs_lazily\", true); // DEFAULT\n\n// PREF: disable preSkeletonUI on startup [WINDOWS]\nuser_pref(\"browser.startup.preXulSkeletonUI\", false);\n\n// PREF: lazy load iframes\nuser_pref(\"dom.iframe_lazy_loading.enabled\", true); // DEFAULT [FF121+]\n\n/****************************************************************************\n * SECTION: GFX RENDERING TWEAKS                                            *\n****************************************************************************/\n\n// PREF: Webrender tweaks\n// [1] https://searchfox.org/mozilla-central/rev/6e6332bbd3dd6926acce3ce6d32664eab4f837e5/modules/libpref/init/StaticPrefList.yaml#6202-6219\n// [2] https://hacks.mozilla.org/2017/10/the-whole-web-at-maximum-fps-how-webrender-gets-rid-of-jank/\n// [3] https://www.reddit.com/r/firefox/comments/tbphok/is_setting_gfxwebrenderprecacheshaders_to_true/i0bxs2r/\n// [4] https://www.reddit.com/r/firefox/comments/z5auzi/comment/ixw65gb?context=3\n// [5] https://gist.github.com/RubenKelevra/fd66c2f856d703260ecdf0379c4f59db?permalink_comment_id=4532937#gistcomment-4532937\nuser_pref(\"gfx.webrender.all\", true); // enables WR + additional features\nuser_pref(\"gfx.webrender.precache-shaders\", true); // longer initial startup time\nuser_pref(\"gfx.webrender.compositor\", true); // DEFAULT WINDOWS macOS\nuser_pref(\"gfx.webrender.compositor.force-enabled\", true); // enforce\n\n// PREF: if your hardware doesn't support Webrender, you can fallback to Webrender's software renderer\n// [1] https://www.ghacks.net/2020/12/14/how-to-find-out-if-webrender-is-enabled-in-firefox-and-how-to-enable-it-if-it-is-not/\n//user_pref(\"gfx.webrender.software\", true); // Software Webrender uses CPU instead of GPU\n    //user_pref(\"gfx.webrender.software.opengl\", true); // LINUX\n\n// PREF: GPU-accelerated Canvas2D\n// Use gpu-canvas instead of to skia-canvas.\n// [WARNING] May cause issues on some Windows machines using integrated GPUs [2] [3]\n// Add to your overrides if you have a dedicated GPU.\n// [NOTE] Higher values will use more memory.\n// [1] https://bugzilla.mozilla.org/show_bug.cgi?id=1741501\n// [2] https://github.com/yokoffing/Betterfox/issues/153\n// [3] https://github.com/yokoffing/Betterfox/issues/198\nuser_pref(\"gfx.canvas.accelerated\", true); // DEFAULT macOS LINUX [FF110]; not compatible with WINDOWS integrated GPUs\n    user_pref(\"gfx.canvas.accelerated.cache-items\", 4096); // default=2048; alt=8192\n    user_pref(\"gfx.canvas.accelerated.cache-size\", 512); // default=256; alt=1024\n    user_pref(\"gfx.content.skia-font-cache-size\", 20); // default=5; Chrome=20\n    // [1] https://bugzilla.mozilla.org/show_bug.cgi?id=1239151#c2\n\n// PREF: disable AV1 for hardware decodeable videos\n// Firefox sometimes uses AV1 video decoding even to GPUs which do not support it.\n// [1] https://www.reddit.com/r/AV1/comments/s5xyph/youtube_av1_codec_have_worse_quality_than_old_vp9\n//user_pref(\"media.av1.enabled\", false);\n\n// PREF: hardware and software decoded video overlay [FF116+]\n// [1] https://bugzilla.mozilla.org/show_bug.cgi?id=1829063\n// [2] https://phabricator.services.mozilla.com/D175993\n//user_pref(\"gfx.webrender.dcomp-video-hw-overlay-win\", true); // DEFAULT\n    //user_pref(\"gfx.webrender.dcomp-video-hw-overlay-win-force-enabled\", true); // enforce\n//user_pref(\"gfx.webrender.dcomp-video-sw-overlay-win\", true); // DEFAULT\n    //user_pref(\"gfx.webrender.dcomp-video-sw-overlay-win-force-enabled\", true); // enforce\n\n\n/****************************************************************************\n * SECTION: DISK CACHE                                                     *\n****************************************************************************/\n\n// PREF: disk cache\n// [NOTE] If you think it helps performance, then feel free to override this.\n// [SETTINGS] See about:cache\n// More efficient to keep the browser cache instead of having to\n// re-download objects for the websites you visit frequently.\n// [1] https://www.janbambas.cz/new-firefox-http-cache-enabled/\nuser_pref(\"browser.cache.disk.enable\", true); // DEFAULT\n\n// PREF: disk cache size\n// [1] https://bugzilla.mozilla.org/buglist.cgi?bug_id=913808,968106,968101\n// [2] https://rockridge.hatenablog.com/entry/2014/09/15/165501\n// [3] https://www.reddit.com/r/firefox/comments/17oqhw3/firefox_and_ssd_disk_consumption/\nuser_pref(\"browser.cache.disk.smart_size.enabled\", false); // force a fixed max cache size on disk\nuser_pref(\"browser.cache.disk.capacity\", 512000); // default=256000; size of disk cache; 1024000=1GB, 2048000=2GB\nuser_pref(\"browser.cache.disk.max_entry_size\", 51200); // DEFAULT (50 MB); maximum size of an object in disk cache\n\n// PREF: cache memory pool\n// Cache v2 provides a memory pool that stores metadata (such as response headers)\n// for recently read cache entries [1]. It is managed by a cache thread, and caches with\n// metadata in the pool appear to be reused immediately.\n// [1] https://bugzilla.mozilla.org/buglist.cgi?bug_id=986179\nuser_pref(\"browser.cache.disk.metadata_memory_limit\", 500); // default=250 (0.25 MB); limit of recent metadata we keep in memory for faster access\n\n// PREF: number of chunks we preload ahead of read\n// Large content such as images will load faster.\n// [1] https://bugzilla.mozilla.org/buglist.cgi?bug_id=913819,988318\n// [2] http://www.janbambas.cz/new-firefox-http-cache-enabled/\nuser_pref(\"browser.cache.disk.preload_chunk_count\", 4); // DEFAULT\n\n// PREF: the time period used to re-compute the frecency value of cache entries\n// The frequency algorithm is used to select entries, and entries that are recently\n// saved or frequently reused are retained. The frecency value determines how\n// frequently a page has been accessed and is used by Firefox's cache algorithm.\n// The frequency algorithm is used to select entries, and entries that are recently\n// saved or frequently reused are retained. The frecency value determines how\n// often a page has been accessed and is used by Firefox's cache algorithm.\n// When the memory pool becomes full, the oldest data is purged. By default,\n// data older than 6 hours is treated as old.\n// [1] https://bugzilla.mozilla.org/buglist.cgi?bug_id=942835,1012327\n// [2] https://bugzilla.mozilla.org/buglist.cgi?bug_id=913808,968101\nuser_pref(\"browser.cache.frecency_half_life_hours\", 6); // DEFAULT\n\n// PREF: memory limit (in kB) for new cache data not yet written to disk\n// Writes to the cache are buffered and written to disk on background with low priority.\n// With a slow persistent storage, these buffers may grow when data is coming\n// fast from the network. When the amount of unwritten data is exceeded, new\n// writes will simply fail. We have two buckets, one for important data\n// (priority) like html, css, fonts and js, and one for other data like images, video, etc.\nuser_pref(\"browser.cache.disk.max_chunks_memory_usage\", 40960); // DEFAULT (40 MB)\nuser_pref(\"browser.cache.disk.max_priority_chunks_memory_usage\", 40960); // DEFAULT (40 MB)\n\n// PREF: how often to validate document in cache\n// [1] https://searchfox.org/mozilla-release/source/modules/libpref/init/StaticPrefList.yaml#1092-1096\n// 0 = once-per-session\n// 3 = when-appropriate/automatically (default)\nuser_pref(\"browser.cache.check_doc_frequency\", 3); // DEFAULT\n\n// PREF: enforce free space checks\n// When smartsizing is disabled, we could potentially fill all disk space by\n// cache data when the disk capacity is not set correctly. To avoid that, we\n// check the free space every time we write some data to the cache. The free\n// space is checked against two limits. Once the soft limit is reached we start\n// evicting the least useful entries, when we reach the hard limit writing to\n// the entry fails.\nuser_pref(\"browser.cache.disk.free_space_soft_limit\", 10240); // default=5120 (5 MB)\nuser_pref(\"browser.cache.disk.free_space_hard_limit\", 2048); // default=1024 (1 MB)\n\n// PREF: compression level for cached JavaScript bytecode [FF102+]\n// [1] https://github.com/yokoffing/Betterfox/issues/247\n// 0 = do not compress (default)\n// 1 = minimal compression\n// 9 = maximal compression\nuser_pref(\"browser.cache.jsbc_compression_level\", 3);\n\n// PREF: strategy to use for when the bytecode should be encoded and saved [TESTING ONLY]\n// -1 makes page load times marginally longer when a page is being loaded for the first time.\n// Subsequent reload of websites will be much much faster.\n// [1] https://searchfox.org/mozilla-release/source/modules/libpref/init/StaticPrefList.yaml#3461-3488\n// [2] https://www.reddit.com/r/firefox/comments/12786yv/improving_performance_in_firefox_android_part_ii/\n// -1 = saved as soon as the script is seen for the first time, independently of the size or last access time\n// 0 = saved in order to minimize the page-load time (default)\nuser_pref(\"dom.script_loader.bytecode_cache.enabled\", true); // DEFAULT\nuser_pref(\"dom.script_loader.bytecode_cache.strategy\", 0); // DEFAULT\n\n/****************************************************************************\n * SECTION: MEMORY CACHE                                                   *\n****************************************************************************/\n\n// PREF: memory cache\n// The \"automatic\" size selection (default) is based on a decade-old table\n// that only contains settings for systems at or below 8GB of system memory [1].\n// Waterfox G6 allows it to go above 8GB machines [3].\n// Value can be up to the max size of an unsigned 64-bit integer.\n// -1=Automatically decide the maximum memory to use to cache decoded images,\n// messages, and chrome based on the total amount of RAM\n// [1] https://kb.mozillazine.org/Browser.cache.memory.capacity#-1\n// [2] https://searchfox.org/mozilla-central/source/netwerk/cache2/CacheObserver.cpp#94-125\n// [3] https://github.com/WaterfoxCo/Waterfox/commit/3fed16932c80a2f6b37d126fe10aed66c7f1c214\n//user_pref(\"browser.cache.memory.capacity\", -1); // DEFAULT; 256000=256 MB; 512000=500 MB; 1048576=1GB, 2097152=2GB\nuser_pref(\"browser.cache.memory.max_entry_size\", 10240); // (10 MB); default=5120 (5 MB)\n\n// PREF: amount of Back/Forward cached pages stored in memory for each tab\n// Pages that were recently visited are stored in memory in such a way\n// that they don't have to be re-parsed. This improves performance\n// when pressing Back and Forward. This pref limits the maximum\n// number of pages stored in memory. If you are not using the Back\n// and Forward buttons that much, but rather using tabs, then there\n// is no reason for Firefox to keep memory for this.\n// -1=determine automatically (8 pages)\n// [1] https://kb.mozillazine.org/Browser.sessionhistory.max_total_viewers#Possible_values_and_their_effects\nuser_pref(\"browser.sessionhistory.max_total_viewers\", 4);\n\n/****************************************************************************\n * SECTION: MEDIA CACHE                                                     *\n****************************************************************************/\n\n// PREF: media disk cache\nuser_pref(\"media.cache_size\", 512000); // DEFAULT\n\n// PREF: media memory cache\n// [1] https://hg.mozilla.org/mozilla-central/file/tip/modules/libpref/init/StaticPrefList.yaml#l9652\n// [2] https://github.com/arkenfox/user.js/pull/941\nuser_pref(\"media.memory_cache_max_size\", 65536); // default=8192; AF=65536; alt=131072\nuser_pref(\"media.memory_caches_combined_limit_kb\", 524288); // DEFAULT; alt=1048576\nuser_pref(\"media.memory_caches_combined_limit_pc_sysmem\", 5); // DEFAULT; alt=10; the percentage of system memory that Firefox can use for media caches\n\n// PREF: Media Source Extensions (MSE) web standard\n// Disabling MSE allows videos to fully buffer, but you're limited to 720p.\n// [WARNING] Disabling MSE may break certain videos.\n// false=Firefox plays the old WebM format\n// true=Firefox plays the new WebM format (default)\n// [1] https://support.mozilla.org/en-US/questions/1008271\nuser_pref(\"media.mediasource.enabled\", true); // DEFAULT\n\n// PREF: adjust video buffering periods when not using MSE (in seconds)\n// [NOTE] Does not affect videos over 720p since they use DASH playback [1]\n// [1] https://lifehacker.com/preload-entire-youtube-videos-by-disabling-dash-playbac-1186454034\nuser_pref(\"media.cache_readahead_limit\", 7200); // 120 min; default=60; stop reading ahead when our buffered data is this many seconds ahead of the current playback\nuser_pref(\"media.cache_resume_threshold\", 3600); // 60 min; default=30; when a network connection is suspended, don't resume it until the amount of buffered data falls below this threshold\n/****************************************************************************\n * SECTION: IMAGE CACHE                                                     *\n****************************************************************************/\n\n// PREF: image cache\nuser_pref(\"image.cache.size\", 5242880); // DEFAULT; in MiB; alt=10485760 (cache images up to 10MiB in size)\nuser_pref(\"image.mem.decode_bytes_at_a_time\", 32768); // default=16384; alt=65536; chunk size for calls to the image decoders\n\n// PREF: set minimum timeout to unmap shared surfaces since they have been last used\n// This is only used on 32-bit builds of Firefox where there is meaningful\n// virtual address space pressure.\n// [1] https://phabricator.services.mozilla.com/D109440\n// [2] https://bugzilla.mozilla.org/show_bug.cgi?id=1699224\nuser_pref(\"image.mem.shared.unmap.min_expiration_ms\", 120000); // default=60000; minimum timeout to unmap shared surfaces since they have been last used\n\n/****************************************************************************\n * SECTION: NETWORK                                                         *\n****************************************************************************/\n\n// PREF: use bigger packets\n// [WARNING] Cannot open HTML files bigger than 4MB if changed [2].\n// Reduce Firefox's CPU usage by requiring fewer application-to-driver data transfers.\n// However, it does not affect the actual packet sizes transmitted over the network.\n// [1] https://www.mail-archive.com/support-seamonkey@lists.mozilla.org/msg74561.html\n// [2] https://github.com/yokoffing/Betterfox/issues/279\nuser_pref(\"network.buffer.cache.size\", 262144); // 256 kb; default=32768 (32 kb)\nuser_pref(\"network.buffer.cache.count\", 128); // default=24\n\n// PREF: increase the absolute number of HTTP connections\n// [1] https://kb.mozillazine.org/Network.http.max-connections\n// [2] https://kb.mozillazine.org/Network.http.max-persistent-connections-per-server\n// [3] https://www.reddit.com/r/firefox/comments/11m2yuh/how_do_i_make_firefox_use_more_of_my_900_megabit/jbfmru6/\nuser_pref(\"network.http.max-connections\", 1800); // default=900\nuser_pref(\"network.http.max-persistent-connections-per-server\", 10); // default=6; download connections; anything above 10 is excessive\n    user_pref(\"network.http.max-urgent-start-excessive-connections-per-host\", 5); // default=3\n    user_pref(\"network.http.max-persistent-connections-per-proxy\", 48); // default=32\nuser_pref(\"network.websocket.max-connections\", 200); // DEFAULT\n\n// PREF: pacing requests [FF23+]\n// Controls how many HTTP requests are sent at a time.\n// Pacing HTTP requests can have some benefits, such as reducing network congestion,\n// improving web page loading speed, and avoiding server overload.\n// Pacing requests adds a slight delay between requests to throttle them.\n// If you have a fast machine and internet connection, disabling pacing\n// may provide a small speed boost when loading pages with lots of requests.\n// false=Firefox will send as many requests as possible without pacing\n// true=Firefox will pace requests (default)\nuser_pref(\"network.http.pacing.requests.enabled\", false);\n    user_pref(\"network.http.pacing.requests.min-parallelism\", 10); // default=6\n    user_pref(\"network.http.pacing.requests.burst\", 14); // default=10\n\n// PREF: increase DNS cache\n// [1] https://developer.mozilla.org/en-US/docs/Web/Performance/Understanding_latency\nuser_pref(\"network.dnsCacheEntries\", 1000); // default=400\n\n// PREF: adjust DNS expiration time\n// [ABOUT] about:networking#dns\n// [NOTE] These prefs will be ignored by DNS resolver if using DoH/TRR.\nuser_pref(\"network.dnsCacheExpiration\", 3600); // keep entries for 1 hour\n    user_pref(\"network.dnsCacheExpirationGracePeriod\", 240); // default=60; cache DNS entries for 4 minutes after they expire\n\n// PREF: the number of threads for DNS\nuser_pref(\"network.dns.max_high_priority_threads\", 8); // default=5\nuser_pref(\"network.dns.max_any_priority_threads\", 3); // DEFAULT\n\n// PREF: increase TLS token caching\nuser_pref(\"network.ssl_tokens_cache_capacity\", 10240); // default=2048; more TLS token caching (fast reconnects)\n\n/****************************************************************************\n * SECTION: SPECULATIVE LOADING                                            *\n****************************************************************************/\n\n// These are connections that are not explicitly asked for (e.g., clicked on).\n// [1] https://developer.mozilla.org/en-US/docs/Web/Performance/Speculative_loading\n\n// [NOTE] FF85+ partitions (isolates) pooled connections, prefetch connections,\n// pre-connect connections, speculative connections, TLS session identifiers,\n// and other connections. We can take advantage of the speed of pre-connections\n// while preserving privacy. Users may relax hardening to maximize their preference.\n// For more information, see SecureFox: \"PREF: State Paritioning\" and \"PREF: Network Partitioning\".\n// [NOTE] To activate and increase network predictions, go to settings in uBlock Origin and uncheck:\n// - \"Disable pre-fetching (to prevent any connection for blocked network requests)\"\n// [NOTE] Add prefs to \"MY OVERRIDES\" section and uncomment to enable them in your user.js.\n\n// PREF: link-mouseover opening connection to linked server\n// When accessing content online, devices use sockets as endpoints.\n// The global limit on half-open sockets controls how many speculative\n// connection attempts can occur at once when starting new connections [3].\n// If the user follows through, pages can load faster since some\n// work was done in advance. Firefox opens predictive connections\n// to sites when hovering over New Tab thumbnails or starting a\n// URL Bar search [1] and hyperlinks within a page [2].\n// [NOTE] DNS (if enabled), TCP, and SSL handshakes are set up in advance,\n// but page contents are not downloaded until a click on the link is registered.\n// [1] https://support.mozilla.org/en-US/kb/how-stop-firefox-making-automatic-connections?redirectslug=how-stop-firefox-automatically-making-connections&redirectlocale=en-US#:~:text=Speculative%20pre%2Dconnections\n// [2] https://news.slashdot.org/story/15/08/14/2321202/how-to-quash-firefoxs-silent-requests\n// [3] https://searchfox.org/mozilla-central/rev/028c68d5f32df54bca4cf96376f79e48dfafdf08/modules/libpref/init/all.js#1280-1282\n// [4] https://www.keycdn.com/blog/resource-hints#prefetch\n// [5] https://3perf.com/blog/link-rels/#prefetch\nuser_pref(\"network.http.speculative-parallel-limit\", 6); // DEFAULT\n\n// PREF: DNS prefetching <link rel=\"dns-prefetch\">\n// Used for cross-origin connections to provide small performance improvements.\n// Disable DNS prefetching to prevent Firefox from proactively resolving\n// hostnames for other domains linked on a page. This may eliminate\n// unnecessary DNS lookups, but can increase latency when following external links.\n// [1] https://bitsup.blogspot.com/2008/11/dns-prefetching-for-firefox.html\n// [2] https://css-tricks.com/prefetching-preloading-prebrowsing/#dns-prefetching\n// [3] https://www.keycdn.com/blog/resource-hints#2-dns-prefetching\n// [4] http://www.mecs-press.org/ijieeb/ijieeb-v7-n5/IJIEEB-V7-N5-2.pdf\nuser_pref(\"network.dns.disablePrefetch\", true);\nuser_pref(\"network.dns.disablePrefetchFromHTTPS\", true); // DEFAULT\n\n// PREF: enable <link rel=\"preconnect\"> tag and Link: rel=preconnect response header handling\nuser_pref(\"network.preconnect\", true); // DEFAULT\n\n// PREF: preconnect to the autocomplete URL in the address bar\n// Firefox preloads URLs that autocomplete when a user types into the address bar.\n// Connects to destination server ahead of time, to avoid TCP handshake latency.\n// [NOTE] Firefox will perform DNS lookup (if enabled) and TCP and TLS handshake,\n// but will not start sending or receiving HTTP data.\n// [1] https://www.ghacks.net/2017/07/24/disable-preloading-firefox-autocomplete-urls/\nuser_pref(\"browser.urlbar.speculativeConnect.enabled\", false);\n\n// PREF: mousedown speculative connections on bookmarks and history [FF98+]\nuser_pref(\"browser.places.speculativeConnect.enabled\", false);\n\n// PREF: network preload <link rel=\"preload\"> [REMOVED]\n// Used to load high-priority resources faster on the current page, for strategic\n// performance improvements.\n// Instructs the browser to immediately fetch and cache high-priority resources\n// for the current page to improve performance. The browser downloads resources\n// but does not execute scripts or apply stylesheets - it just caches them for\n// instant availability later.\n// Unlike other pre-connection tags (except modulepreload), this tag is\n// mandatory for the browser.\n// [1] https://developer.mozilla.org/en-US/docs/Web/HTML/Link_types/preload\n// [2] https://w3c.github.io/preload/\n// [3] https://3perf.com/blog/link-rels/#preload\n// [4] https://medium.com/reloading/preload-prefetch-and-priorities-in-chrome-776165961bbf\n// [5] https://www.smashingmagazine.com/2016/02/preload-what-is-it-good-for/#how-can-preload-do-better\n// [6] https://www.keycdn.com/blog/resource-hints#preload\n// [7] https://github.com/arkenfox/user.js/issues/1098#issue-791949341\n// [8] https://yashints.dev/blog/2018/10/06/web-perf-2#preload\n// [9] https://web.dev/preload-critical-assets/\nuser_pref(\"network.preload\", true); // [REMOVED]\n\n// PREF: network module preload <link rel=\"modulepreload\"> [FF115+]\n// High-priority loading of current page JavaScript modules.\n// Used to preload high-priority JavaScript modules for strategic performance improvements.\n// Module preloading allows developers to fetch JavaScript modules and dependencies\n// earlier to accelerate page loads. The browser downloads, parses, and compiles modules\n// referenced by links with this attribute in parallel with other resources, rather\n// than sequentially waiting to process each. Preloading reduces overall download times.\n// Browsers may also automatically preload dependencies without firing extra events.\n// Unlike other pre-connection tags (except rel=preload), this tag is mandatory for the browser.\n// [1] https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/rel/modulepreload\nuser_pref(\"network.modulepreload\", true); // DEFAULT\n\n// PREF: link prefetching <link rel=\"prefetch\">\n// Pre-populates the HTTP cache by prefetching same-site future navigation\n// resources or subresources used on those pages.\n// Enabling link prefetching allows Firefox to preload pages tagged as important.\n// The browser prefetches links with the prefetch-link tag, fetching resources\n// likely needed for the next navigation at low priority. When clicking a link\n// or loading a new page, prefetching stops and discards hints. Prefetching\n// downloads resources without executing them.\n// [NOTE] Since link prefetch uses the HTTP cache, it has a number of issues\n// with document prefetches, such as being potentially blocked by Cache-Control headers\n// (e.g. cache partitioning).\n// [1] https://developer.mozilla.org/en-US/docs/Glossary/Prefetch\n// [2] http://www.mecs-press.org/ijieeb/ijieeb-v7-n5/IJIEEB-V7-N5-2.pdf\n// [3] https://timkadlec.com/remembers/2020-06-17-prefetching-at-this-age/\n// [4] https://3perf.com/blog/link-rels/#prefetch\n// [5] https://developer.mozilla.org/docs/Web/HTTP/Link_prefetching_FAQ\nuser_pref(\"network.prefetch-next\", false);\n\n// PREF: Fetch Priority API [FF119+]\n// Indicates whether the `fetchpriority` attribute for elements which support it.\n// [1] https://web.dev/articles/fetch-priority\n// [2] https://nitropack.io/blog/post/priority-hints\n// [2] https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/fetchPriority\n// [3] https://developer.mozilla.org/en-US/docs/Web/API/HTMLLinkElement/fetchPriority\nuser_pref(\"network.fetchpriority.enabled\", true);\n\n// PREF: early hints [FF120+]\n// [1] https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/103\n// [2] https://developer.chrome.com/blog/early-hints/\n// [3] https://blog.cloudflare.com/early-hints/\n// [4] https://blog.cloudflare.com/early-hints-performance/\nuser_pref(\"network.early-hints.enabled\", true);\n\n// PREF: `Link: rel=preconnect` in 103 Early Hint response [FF120+]\n// Used to warm most critical cross-origin connections to provide\n// performance improvements when connecting to them.\n// [NOTE] When 0, this is limited by \"network.http.speculative-parallel-limit\".\nuser_pref(\"network.early-hints.preconnect.enabled\", true);\nuser_pref(\"network.early-hints.preconnect.max_connections\", 10); // DEFAULT\n\n// PREF: Network Predictor (NP)\n// When enabled, it trains and uses Firefox's algorithm to preload page resource\n// by tracking past page resources. It uses a local file (history) of needed images,\n// scripts, etc. to request them preemptively when navigating.\n// [NOTE] By default, it only preconnects, doing DNS, TCP, and SSL handshakes.\n// No data sends until clicking. With \"network.predictor.enable-prefetch\" enabled,\n// it also performs prefetches.\n// [1] https://wiki.mozilla.org/Privacy/Reviews/Necko\n// [2] https://www.ghacks.net/2014/05/11/seer-disable-firefox/\n// [3] https://github.com/dillbyrne/random-agent-spoofer/issues/238#issuecomment-110214518\n// [4] https://www.igvita.com/posa/high-performance-networking-in-google-chrome/#predictor\nuser_pref(\"network.predictor.enabled\", false);\n\n// PREF: Network Predictor fetch for resources ahead of time\n// Prefetch page resources based on past user behavior.\nuser_pref(\"network.predictor.enable-prefetch\", false); // DEFAULT\n\n// PREF: make Network Predictor active when hovering over links\n// When hovering over links, Network Predictor uses past resource history to\n// preemptively request what will likely be needed instead of waiting for the document.\n// Predictive connections automatically open when hovering over links to speed up\n// loading, starting some work in advance.\nuser_pref(\"network.predictor.enable-hover-on-ssl\", false); // DEFAULT\n\n// PREF: assign Network Predictor confidence levels\n// [NOTE] Keep in mind that Network Predictor must LEARN your browsing habits.\n// Editing these lower will cause more speculative connections to occur,\n// which reduces accuracy over time and has privacy implications.\nuser_pref(\"network.predictor.preresolve-min-confidence\", 60); // DEFAULT\nuser_pref(\"network.predictor.preconnect-min-confidence\", 90); // DEFAULT\nuser_pref(\"network.predictor.prefetch-min-confidence\", 100); // DEFAULT\n\n// PREF: other Network Predictor values\n// [NOTE] Keep in mmind that Network Predictor must LEARN your browsing habits.\nuser_pref(\"network.predictor.prefetch-force-valid-for\", 10); // DEFAULT; how long prefetched resources are considered valid and usable (in seconds) for the prediction modeling\nuser_pref(\"network.predictor.prefetch-rolling-load-count\", 10); // DEFAULT; the maximum number of resources that Firefox will prefetch in memory at one time based on prediction modeling\nuser_pref(\"network.predictor.max-resources-per-entry\", 250); // default=100\nuser_pref(\"network.predictor.max-uri-length\", 1000); // default=500\n\n/****************************************************************************\n * SECTION: EXPERIMENTAL                                                    *\n****************************************************************************/\n\n// PREF: CSS Masonry Layout [NIGHTLY]\n// [1] https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout/Masonry_Layout\nuser_pref(\"layout.css.grid-template-masonry-value.enabled\", true);\n\n// PREF: Prioritized Task Scheduling API [NIGHTLY]\n// [1] https://blog.mozilla.org/performance/2022/06/02/prioritized-task-scheduling-api-is-prototyped-in-nightly/\n// [2] https://medium.com/airbnb-engineering/building-a-faster-web-experience-with-the-posttask-scheduler-276b83454e91\nuser_pref(\"dom.enable_web_task_scheduling\", true);\n\n// PREF: CSS :has() selector [NIGHTLY]\n// Needed for some extensions, filters, and customizations.\n// [1] https://developer.mozilla.org/en-US/docs/Web/CSS/:has\n// [2] https://caniuse.com/css-has\nuser_pref(\"layout.css.has-selector.enabled\", true);\n\n// PREF: HTML Sanitizer API [NIGHTLY]\n// [1] https://developer.mozilla.org/en-US/docs/Web/API/Sanitizer\n// [2] https://caniuse.com/mdn-api_sanitizer\nuser_pref(\"dom.security.sanitizer.enabled\", true);\n\n// PREF: WebGPU [HIGHLY EXPERIMENTAL!]\n// [WARNING] Do not enable unless you are a web developer!\n// [1] https://bugzilla.mozilla.org/show_bug.cgi?id=1746245\n// [2] https://developer.chrome.com/docs/web-platform/webgpu/\n// [3] https://github.com/gpuweb/gpuweb/wiki/Implementation-Status\n// [4] https://hacks.mozilla.org/2020/04/experimental-webgpu-in-firefox/\n//user_pref(\"dom.webgpu.enabled\", true);\n    //user_pref(\"gfx.webgpu.force-enabled\", true); // enforce\n// enable WebGPU indirect draws/dispatches:\n//user_pref(\"dom.webgpu.indirect-dispatch.enabled\", true);\n\n/****************************************************************************\n * SECTION: TAB UNLOAD                                                      *\n****************************************************************************/\n\n// PREF: unload tabs on low memory\n// [ABOUT] about:unloads\n// Firefox will detect if your computer’s memory is running low (less than 200MB)\n// and suspend tabs that you have not used in awhile.\n// [1] https://support.mozilla.org/en-US/kb/unload-inactive-tabs-save-system-memory-firefox\n// [2] https://hacks.mozilla.org/2021/10/tab-unloading-in-firefox-93/user_pref(\"browser.tabs.unloadOnLowMemory\", true); // DEFAULT\n\n// PREF: determine when tabs unload [WINDOWS] [LINUX]\n// Notify TabUnloader or send the memory pressure if the memory resource\n// notification is signaled AND the available commit space is lower than\n// this value.\n// Set this to some high value, e.g. 2/3 of total memory available in your system:\n// 4GB=2640, 8GB=5280, 16GB=10560, 32GB=21120, 64GB=42240\n// [1] https://dev.to/msugakov/taking-firefox-memory-usage-under-control-on-linux-4b02\nuser_pref(\"browser.low_commit_space_threshold_mb\", 2640); // default=200; WINDOWS LINUX\n\n// PREF: determine when tabs unload [LINUX]\n// On Linux, Firefox checks available memory in comparison to total memory,\n// and use this percent value (out of 100) to determine if Firefox is in a\n// low memory scenario.\n// [1] https://dev.to/msugakov/taking-firefox-memory-usage-under-control-on-linux-4b02\nuser_pref(\"browser.low_commit_space_threshold_percent\", 33); // default=5; LINUX\n\n// PREF: determine how long (in ms) tabs are inactive before they unload\n// 60000=1min; 300000=5min; 600000=10min (default)\nuser_pref(\"browser.tabs.min_inactive_duration_before_unload\", 300000); // 5min; default=600000\n\n/****************************************************************************\n * SECTION: PROCESS COUNT                                                  *\n****************************************************************************/\n\n// PREF: process count\n// [ABOUT] View in about:processes.\n// With Firefox Quantum (2017), CPU cores = processCount. However, since the\n// introduction of Fission [2], the number of website processes is controlled\n// by processCount.webIsolated. Disabling fission.autostart or changing\n// fission.webContentIsolationStrategy reverts control back to processCount.\n// [1] https://www.reddit.com/r/firefox/comments/r69j52/firefox_content_process_limit_is_gone/\n// [2] https://firefox-source-docs.mozilla.org/dom/ipc/process_model.html#web-content-processes\nuser_pref(\"dom.ipc.processCount\", 8); // DEFAULT; Shared Web Content\nuser_pref(\"dom.ipc.processCount.webIsolated\", 4); // default=4; Isolated Web Content\n\n// PREF: use one process for process preallocation cache\nuser_pref(\"dom.ipc.processPrelaunch.fission.number\", 1); // default=3; Process Preallocation Cache\n\n// PREF: configure process isolation\n// [1] https://hg.mozilla.org/mozilla-central/file/tip/dom/ipc/ProcessIsolation.cpp#l53\n// [2] https://www.reddit.com/r/firefox/comments/r69j52/firefox_content_process_limit_is_gone/\n\n// OPTION 1: isolate all websites\n// Web content is always isolated into its own `webIsolated` content process\n// based on site-origin, and will only load in a shared `web` content process\n// if site-origin could not be determined.\n//user_pref(\"fission.webContentIsolationStrategy\", 1); // DEFAULT\n//user_pref(\"browser.preferences.defaultPerformanceSettings.enabled\", true); // DEFAULT\n    //user_pref(\"dom.ipc.processCount.webIsolated\", 1); // one process per site origin\n\n// OPTION 2: isolate only \"high value\" websites\n// Only isolates web content loaded by sites which are considered \"high\n// value\". A site is considered high value if it has been granted a\n// `highValue*` permission by the permission manager, which is done in\n// response to certain actions.\nuser_pref(\"fission.webContentIsolationStrategy\", 2);\nuser_pref(\"browser.preferences.defaultPerformanceSettings.enabled\", false);\n    user_pref(\"dom.ipc.processCount.webIsolated\", 1); // one process per site origin (high value)\n    user_pref(\"dom.ipc.processCount\", 8); // determine by number of CPU cores/processors\n\n// OPTION 3: do not isolate websites\n// All web content is loaded into a shared `web` content process. This is\n// similar to the non-Fission behavior; however, remote subframes may still\n// be used for sites with special isolation behavior, such as extension or\n// mozillaweb content processes.\n//user_pref(\"fission.webContentIsolationStrategy\", 0);\n//user_pref(\"browser.preferences.defaultPerformanceSettings.enabled\", false);\n    //user_pref(\"dom.ipc.processCount\", 8); // determine by number of CPU cores/processors\n\n\n/** THEME ADJUSTMENTS ***/\nuser_pref(\"toolkit.legacyUserProfileCustomizations.stylesheets\", true);\nuser_pref(\"browser.compactmode.show\", true);\nuser_pref(\"browser.display.focus_ring_on_anything\", true);\nuser_pref(\"browser.display.focus_ring_style\", 0);\nuser_pref(\"browser.display.focus_ring_width\", 0);\nuser_pref(\"layout.css.prefers-color-scheme.content-override\", 2);\nuser_pref(\"browser.privateWindowSeparation.enabled\", true);\n\n/** FULLSCREEN NOTICE ***/\nuser_pref(\"full-screen-api.transition-duration.enter\", \"0 0\");\nuser_pref(\"full-screen-api.transition-duration.leave\", \"0 0\");\nuser_pref(\"full-screen-api.warning.delay\", -1);\nuser_pref(\"full-screen-api.warning.timeout\", 0);\n\n/** URL BAR ***/\nuser_pref(\"browser.urlbar.suggest.calculator\", true);\nuser_pref(\"browser.urlbar.unitConversion.enabled\", true);\nuser_pref(\"browser.urlbar.trending.featureGate\", false);\n\n//// disable telemetry since we're modding firefox\nuser_pref(\"toolkit.telemetry.enabled\", false);\nuser_pref(\"browser.discovery.enabled\", false);\nuser_pref(\"app.shield.optoutstudies.enabled\", false);\nuser_pref(\"datareporting.healthreport.documentServerURI\", \"http://%(server)s/healthreport/\");\nuser_pref(\"datareporting.healthreport.uploadEnabled\", false);\nuser_pref(\"datareporting.policy.dataSubmissionPolicyBypassNotification\", true);\nuser_pref(\"browser.crashReports.unsubmittedCheck.autoSubmit2\", false);\n//// make the theme work properly\nuser_pref(\"toolkit.legacyUserProfileCustomizations.stylesheets\", true);\nuser_pref(\"browser.proton.places-tooltip.enabled\", true);\nuser_pref(\"layout.css.moz-document.content.enabled\", true);\n//// eliminate the blank white window during startup\nuser_pref(\"browser.startup.blankWindow\", false);\nuser_pref(\"browser.startup.preXulSkeletonUI\", false);\n////\n// required for icons with data URLs\nuser_pref(\"svg.context-properties.content.enabled\", true);\n// required for acrylic gaussian blur\nuser_pref(\"layout.css.backdrop-filter.enabled\", true);\n// enable browser dark mode\nuser_pref(\"ui.systemUsesDarkTheme\", 1);\n// enable content dark mode\nuser_pref(\"layout.css.prefers-color-scheme.content-override\", 0);\n// allow the color-mix() CSS function\nuser_pref(\"layout.css.color-mix.enabled\", true);\n// other CSS features\nuser_pref(\"layout.css.moz-outline-radius.enabled\", true);\n//// avoid native styling\n////\n// avoid custom menulist/select styling\nuser_pref(\"dom.forms.select.customstyling\", false);\n// keep \"all tabs\" menu available at all times, useful for all tabs menu\n// expansion pack\nuser_pref(\"browser.tabs.tabmanager.enabled\", true);\n// disable urlbar result group labels since we don't use them\nuser_pref(\"browser.urlbar.groupLabels.enabled\", true);\n// allow urlbar result menu buttons without slowing down tabbing through results\n// corresponds to the system color Highlight\nuser_pref(\"ui.highlight\", \"hsl(250, 100%, 60%)\");\n// Background for selected <option> elements and others\nuser_pref(\"ui.selecteditem\", \"#2F3456\");\n// Text color for selected <option> elements and others\nuser_pref(\"ui.selecteditemtext\", \"#FFFFFFCC\");\n//// Tooltip colors (only relevant if userChrome.ag.css somehow fails to apply,\n//// but doesn't hurt)\nuser_pref(\"ui.infotext\", \"#FFFFFF\");\nuser_pref(\"ui.infobackground\", \"#hsl(233, 36%, 11%)\");\n////\n\n// ⚠️ REQUIRED on macOS\nuser_pref(\"widget.macos.native-context-menus\", true);\n\n////// ✨ RECOMMENDED PREFS\n\n//// allow installing the unsigned search extensions. the localized search\n//// extensions currently can't be signed because of\n//// https://github.com/mozilla/addons-linter/issues/3911 so to use them, we\n//// must disable the signature requirement and go to about:addons > gear icon >\n//// install addon from file > find the .zip file\nuser_pref(\"xpinstall.signatures.required\", false);\nuser_pref(\"extensions.autoDisableScopes\", 0);\n//// functionality oriented prefs\nuser_pref(\"browser.shell.checkDefaultBrowser\", false);\nuser_pref(\"browser.startup.homepage_override.mstone\", \"ignore\");\nuser_pref(\"browser.display.use_system_colors\", false);\n//user_pref(\"browser.privatebrowsing.enable-new-indicator\", false);\nuser_pref(\"accessibility.mouse_focuses_formcontrol\", 0);\nuser_pref(\"browser.tabs.tabMinWidth\", 90);\nuser_pref(\"browser.urlbar.accessibility.tabToSearch.announceResults\", true);\n// disable large urlbar suggestions for now. they are styled so this is not\n// required, but I don't find them useful since they only seem to appear when\n// the urlbar is empty and search engine is set to google.\nuser_pref(\"browser.urlbar.richSuggestions.featureGate\", true);\n// but enable the rich one-line suggestions that appear when typing long search\n// terms and guess an end to the sentence\nuser_pref(\"browser.urlbar.richSuggestions.tail\", true);\nuser_pref(\"browser.urlbar.suggest.quicksuggest.nonsponsored\", true);\nuser_pref(\"browser.urlbar.suggest.quicksuggest.sponsored\", false);\nuser_pref(\"browser.urlbar.trimURLs\", false);\n// hide fullscreen enter/exit warning\nuser_pref(\"full-screen-api.transition-duration.enter\", \"0 0\");\nuser_pref(\"full-screen-api.transition-duration.leave\", \"0 0\");\nuser_pref(\"full-screen-api.warning.delay\", -1);\nuser_pref(\"full-screen-api.warning.timeout\", 0);\n// whether to show content dialogs within tabs or above tabs\nuser_pref(\"prompts.contentPromptSubDialog\", true);\n// when using the keyboard to navigate menus, skip past disabled items\nuser_pref(\"ui.skipNavigatingDisabledMenuItem\", 1);\nuser_pref(\"ui.prefersReducedMotion\", 0);\n// reduce the delay before showing submenus (e.g. View > Toolbars)\nuser_pref(\"ui.submenuDelay\", 100);\n// the delay before a tooltip appears when hovering an element (default 300ms)\nuser_pref(\"ui.tooltipDelay\", 300);\n// should pressing the Alt key alone focus the menu bar?\nuser_pref(\"ui.key.menuAccessKeyFocuses\", false);\n// reduce update frequency\nuser_pref(\"app.update.suppressPrompts\", true);\n////\n\n//// style oriented prefs\n// use GTK style for in-content scrollbars\n//user_pref(\"widget.non-native-theme.scrollbar.style\", 2);\n//// set the scrollbar style and width\nuser_pref(\"widget.non-native-theme.win.scrollbar.use-system-size\", false);\n//user_pref(\"widget.non-native-theme.scrollbar.size.override\", 11);\n//user_pref(\"widget.non-native-theme.gtk.scrollbar.thumb-size\", \"0.818\");\n//// base color scheme prefs\nuser_pref(\"browser.theme.content-theme\", 0);\nuser_pref(\"browser.theme.toolbar-theme\", 0);\n// set the default background color for color-scheme: dark. see it for example\n// on about:blank\nuser_pref(\"browser.display.background_color.dark\", \"#19191b\");\n////\n// make `outline-style: auto` result in one big stroke instead of two\n// contrasting strokes\nuser_pref(\"widget.non-native-theme.solid-outline-style\", true);\n//// findbar highlight and selection colors\nuser_pref(\"ui.textHighlightBackground\", \"#7755FF\");\nuser_pref(\"ui.textHighlightForeground\", \"#FFFFFF\");\nuser_pref(\"ui.textSelectBackground\", \"#FFFFFF\");\nuser_pref(\"ui.textSelectAttentionBackground\", \"#FF3388\");\nuser_pref(\"ui.textSelectAttentionForeground\", \"#FFFFFF\");\nuser_pref(\"ui.textSelectDisabledBackground\", \"#7755FF\");\nuser_pref(\"ui.textSelectBackgroundAttention\", \"#FF3388\");\nuser_pref(\"ui.textSelectBackgroundDisabled\", \"#7755FF\");\n//// spell check style\nuser_pref(\"ui.SpellCheckerUnderline\", \"#E2467A\");\nuser_pref(\"ui.SpellCheckerUnderlineStyle\", 1);\n//// IME style (for example when typing pinyin or hangul)\nuser_pref(\"ui.IMERawInputBackground\", \"#000000\");\nuser_pref(\"ui.IMESelectedRawTextBackground\", \"#7755FF\");\n////\n// about:reader dark mode\nuser_pref(\"reader.color_scheme\", \"dark\");\n\n//// font settings\nuser_pref(\"layout.css.font-visibility.private\", 3);\nuser_pref(\"layout.css.font-visibility.resistFingerprinting\", 3);\n////\n\n//// recommended userChrome... prefs created by the theme or scripts. there are\n//// many more not included here, to allow a lot more customization. these are\n//// just the ones I'm pretty certain 90% of users will want. see the prefs list\n//// at https://github.com/aminomancer/uc.css.js\nuser_pref(\"userChrome.tabs.pinned-tabs.close-buttons.disabled\", true);\nuser_pref(\"userChrome.urlbar-results.hide-help-button\", true);\n// add a drop shadow on menupopup and panel elements (e.g. context menus)\nuser_pref(\"userChrome.css.menupopup-shadows\", true);\n//// these are more subjective prefs, but they're important ones\n//// display the all tabs menu in reverse order (newer tabs on top, like history)\nuser_pref(\"userChrome.tabs.all-tabs-menu.reverse-order\", true);\n// turn bookmarks on the toolbar into small square buttons with no text labels\n// user_pref(\"userChrome.bookmarks-toolbar.icons-only\", false);\n// replace UI font with SF Pro, the system font for macOS.\n// recommended for all operating systems, but not required.\n// must have the fonts installed. check the repo's readme for more details.\n//user_pref(\"userChrome.css.mac-ui-fonts\", true);\n// custom wikipedia dark mode theme\n// user_pref(\"userChrome.css.wikipedia.dark-theme-enabled\", true);\n//// disable telemetry since we're modding firefox\nuser_pref(\"toolkit.telemetry.enabled\", false);\nuser_pref(\"browser.discovery.enabled\", false);\nuser_pref(\"app.shield.optoutstudies.enabled\", false);\nuser_pref(\"datareporting.healthreport.documentServerURI\", \"http://%(server)s/healthreport/\");\nuser_pref(\"datareporting.healthreport.uploadEnabled\", false);\nuser_pref(\"datareporting.policy.dataSubmissionPolicyBypassNotification\", true);\nuser_pref(\"browser.crashReports.unsubmittedCheck.autoSubmit2\", false);\n//// make the theme work properly\nuser_pref(\"toolkit.legacyUserProfileCustomizations.stylesheets\", true);\nuser_pref(\"browser.proton.places-tooltip.enabled\", true);\nuser_pref(\"layout.css.moz-document.content.enabled\", true);\n//// eliminate the blank white window during startup\nuser_pref(\"browser.startup.blankWindow\", false);\nuser_pref(\"browser.startup.preXulSkeletonUI\", false);\n////\n// required for icons with data URLs\nuser_pref(\"svg.context-properties.content.enabled\", true);\n// required for acrylic gaussian blur\nuser_pref(\"layout.css.backdrop-filter.enabled\", true);\n// enable browser dark mode\nuser_pref(\"ui.systemUsesDarkTheme\", 1);\n// enable content dark mode\nuser_pref(\"layout.css.prefers-color-scheme.content-override\", 0);\n// allow the color-mix() CSS function\nuser_pref(\"layout.css.color-mix.enabled\", true);\n// other CSS features\nuser_pref(\"layout.css.moz-outline-radius.enabled\", true);\n//// avoid native styling\n//user_pref(\"browser.display.windows.non_native_menus\", 1);\n//user_pref(\"widget.content.allow-gtk-dark-theme\", true);\n////\n// avoid custom menulist/select styling\n//user_pref(\"dom.forms.select.customstyling\", false);\n// keep \"all tabs\" menu available at all times, useful for all tabs menu\n// expansion pack\nuser_pref(\"browser.tabs.tabmanager.enabled\", true);\n// disable urlbar result group labels since we don't use them\nuser_pref(\"browser.urlbar.groupLabels.enabled\", false);\n// allow urlbar result menu buttons without slowing down tabbing through results\nuser_pref(\"browser.urlbar.resultMenu.keyboardAccessible\", false);\n// corresponds to the system color Highlight\nuser_pref(\"ui.highlight\", \"hsl(250, 100%, 60%)\");\n// Background for selected <option> elements and others\nuser_pref(\"ui.selecteditem\", \"#2F3456\");\n// Text color for selected <option> elements and others\nuser_pref(\"ui.selecteditemtext\", \"#FFFFFFCC\");\n//// Tooltip colors (only relevant if userChrome.ag.css somehow fails to apply,\n//// but doesn't hurt)\nuser_pref(\"ui.infotext\", \"#FFFFFF\");\nuser_pref(\"ui.infobackground\", \"#hsl(233, 36%, 11%)\");\n////"
        }
    ]
}